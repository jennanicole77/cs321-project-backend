# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GPU(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, power: float=None, hash: float=None):  # noqa: E501
        """GPU - a model defined in Swagger

        :param name: The name of this GPU.  # noqa: E501
        :type name: str
        :param power: The power of this GPU.  # noqa: E501
        :type power: float
        :param hash: The hash of this GPU.  # noqa: E501
        :type hash: float
        """
        self.swagger_types = {
            'name': str,
            'power': float,
            'hash': float
        }

        self.attribute_map = {
            'name': 'name',
            'power': 'power',
            'hash': 'hash'
        }
        self._name = name
        self._power = power
        self._hash = hash

    @classmethod
    def from_dict(cls, dikt) -> 'GPU':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GPU of this GPU.  # noqa: E501
        :rtype: GPU
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this GPU.


        :return: The name of this GPU.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this GPU.


        :param name: The name of this GPU.
        :type name: str
        """

        self._name = name

    @property
    def power(self) -> float:
        """Gets the power of this GPU.


        :return: The power of this GPU.
        :rtype: float
        """
        return self._power

    @power.setter
    def power(self, power: float):
        """Sets the power of this GPU.


        :param power: The power of this GPU.
        :type power: float
        """

        self._power = power

    @property
    def hash(self) -> float:
        """Gets the hash of this GPU.


        :return: The hash of this GPU.
        :rtype: float
        """
        return self._hash

    @hash.setter
    def hash(self, hash: float):
        """Sets the hash of this GPU.


        :param hash: The hash of this GPU.
        :type hash: float
        """

        self._hash = hash
